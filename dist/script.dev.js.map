{"version":3,"sources":["script.js"],"names":["getProficiencyColor","proficiency","animateSkillBars","skillBars","document","querySelectorAll","forEach","progress","parseInt","getAttribute","targetWidth","style","width","backgroundColor","setTimeout","addEventListener","skillsSection","querySelector","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","menu","navList","closeNav","classList","remove","e","stopPropagation","toggle","link","body","contains","target"],"mappings":";;AAAA;AACA,SAASA,mBAAT,CAA6BC,WAA7B,EAA0C;AACxC,MAAIA,WAAW,IAAI,EAAnB,EAAuB,OAAO,SAAP,CADiB,CACC;;AACzC,MAAIA,WAAW,IAAI,EAAnB,EAAuB,OAAO,SAAP,CAFiB,CAEC;;AACzC,SAAO,SAAP,CAHwC,CAGtB;AACnB,C,CAED;;;AACA,SAASC,gBAAT,GAA4B;AAC1B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,CAAlB;AAEAF,EAAAA,SAAS,CAACG,OAAV,CAAkB,UAAAC,QAAQ,EAAI;AAC5B,QAAMN,WAAW,GAAGO,QAAQ,CAACD,QAAQ,CAACE,YAAT,CAAsB,YAAtB,CAAD,CAA5B;AACA,QAAMC,WAAW,GAAGT,WAAW,GAAG,GAAlC,CAF4B,CAI5B;;AACAM,IAAAA,QAAQ,CAACI,KAAT,CAAeC,KAAf,GAAuB,IAAvB;AACAL,IAAAA,QAAQ,CAACI,KAAT,CAAeE,eAAf,GAAiCb,mBAAmB,CAACC,WAAD,CAApD,CAN4B,CAQ5B;;AACAa,IAAAA,UAAU,CAAC,YAAM;AACfP,MAAAA,QAAQ,CAACI,KAAT,CAAeC,KAAf,GAAuBF,WAAvB;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAZD;AAaD,C,CAED;;;AACAN,QAAQ,CAACW,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD;AACAb,EAAAA,gBAAgB,GAFkC,CAIlD;;AACA,MAAMc,aAAa,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,SAAvB,CAAtB;AACA,MAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAACC,OAAD,EAAa;AACrDA,IAAAA,OAAO,CAACd,OAAR,CAAgB,UAAAe,KAAK,EAAI;AACvB,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACxBpB,QAAAA,gBAAgB;AACjB;AACF,KAJD;AAKD,GANgB,EAMd;AAAEqB,IAAAA,SAAS,EAAE;AAAb,GANc,CAAjB;;AAQA,MAAIP,aAAJ,EAAmB;AACjBE,IAAAA,QAAQ,CAACM,OAAT,CAAiBR,aAAjB;AACD;AACF,CAjBD,E,CAoBA;;AACA,IAAMS,IAAI,GAAGrB,QAAQ,CAACa,aAAT,CAAuB,cAAvB,CAAb;AACA,IAAMS,OAAO,GAAGtB,QAAQ,CAACa,aAAT,CAAuB,WAAvB,CAAhB,C,CAEA;;AACA,SAASU,QAAT,GAAoB;AAClBD,EAAAA,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB;AACD;;AAEDJ,IAAI,CAACV,gBAAL,CAAsB,OAAtB,EAA+B,UAACe,CAAD,EAAO;AACpCA,EAAAA,CAAC,CAACC,eAAF,GADoC,CACf;;AACrBL,EAAAA,OAAO,CAACE,SAAR,CAAkBI,MAAlB,CAAyB,QAAzB;AACD,CAHD,E,CAKA;;AACAN,OAAO,CAACrB,gBAAR,CAAyB,GAAzB,EAA8BC,OAA9B,CAAsC,UAAA2B,IAAI,EAAI;AAC5CA,EAAAA,IAAI,CAAClB,gBAAL,CAAsB,OAAtB,EAA+BY,QAA/B;AACD,CAFD,E,CAIA;;AACAvB,QAAQ,CAAC8B,IAAT,CAAcnB,gBAAd,CAA+B,OAA/B,EAAwC,UAACe,CAAD,EAAO;AAC7C,MAAIJ,OAAO,CAACE,SAAR,CAAkBO,QAAlB,CAA2B,QAA3B,KAAwC,CAACT,OAAO,CAACS,QAAR,CAAiBL,CAAC,CAACM,MAAnB,CAAzC,IAAuE,CAACX,IAAI,CAACU,QAAL,CAAcL,CAAC,CAACM,MAAhB,CAA5E,EAAqG;AACnGT,IAAAA,QAAQ;AACT;AACF,CAJD","sourcesContent":["// Function to get color based on proficiency\nfunction getProficiencyColor(proficiency) {\n  if (proficiency >= 80) return '#10b981'; // Green for high proficiency\n  if (proficiency >= 60) return '#f59e0b'; // Yellow for medium proficiency\n  return '#ef4444'; // Red for low proficiency\n}\n\n// Function to animate skill bars\nfunction animateSkillBars() {\n  const skillBars = document.querySelectorAll('.skill-progress');\n  \n  skillBars.forEach(progress => {\n    const proficiency = parseInt(progress.getAttribute('data-width'));\n    const targetWidth = proficiency + '%';\n    \n    // Set initial state\n    progress.style.width = '0%';\n    progress.style.backgroundColor = getProficiencyColor(proficiency);\n    \n    // Animate after a short delay\n    setTimeout(() => {\n      progress.style.width = targetWidth;\n    }, 100);\n  });\n}\n\n// Initialize animations when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Animate skill bars\n  animateSkillBars();\n  \n  // Optional: Re-animate when skills section comes into view\n  const skillsSection = document.querySelector('#skills');\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        animateSkillBars();\n      }\n    });\n  }, { threshold: 0.2 });\n  \n  if (skillsSection) {\n    observer.observe(skillsSection);\n  }\n});\n\n\n// Toggle navigation on mobile screen\nconst menu = document.querySelector('.menu-toggle');\nconst navList = document.querySelector('.nav-list');\n\n// Close nav when a link is clicked or when clicking outside the nav\nfunction closeNav() {\n  navList.classList.remove('active');\n}\n\nmenu.addEventListener('click', (e) => {\n  e.stopPropagation(); // Prevent body click from firing\n  navList.classList.toggle('active');\n});\n\n// Close menu when a nav link is clicked\nnavList.querySelectorAll('a').forEach(link => {\n  link.addEventListener('click', closeNav);\n});\n\n// Close menu when clicking outside nav/menu\ndocument.body.addEventListener('click', (e) => {\n  if (navList.classList.contains('active') && !navList.contains(e.target) && !menu.contains(e.target)) {\n    closeNav();\n  }\n});"],"file":"script.dev.js"}